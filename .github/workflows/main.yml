name: Let's Code & Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Let's Code & Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        env:
          IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/amanops:latest
        run: |
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      - name: Scan Docker Image with Trivy
        env:
          IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/amanops:latest
        run: |
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image $IMAGE_NAME | tee trivy-report.log

      - name: Whitelist GitHub Actions Runner IP in AWS Security Group
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SECURITY_GROUP_ID: ${{ secrets.SECURITY_GROUP_ID }}
        run: |
          echo "Fetching GitHub Actions runner IP..."
          RUNNER_IP=$(curl -s https://checkip.amazonaws.com)
          echo "GitHub Actions Runner IP: $RUNNER_IP"
          
          echo "Allowing access to EC2..."
          aws ec2 authorize-security-group-ingress \
            --group-id $SECURITY_GROUP_ID \
            --protocol tcp \
            --port 22 \
            --cidr $RUNNER_IP/32 \
            --region $AWS_REGION

      - name: Deploy on AWS EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ubuntu
          IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/amanops:latest
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$HOST << EOF
            sudo docker stop my-app || true
            sudo docker system prune -af 
            sudo docker pull $IMAGE_NAME
            sudo docker run -d --restart=always --name my-app -p 8080:80 $IMAGE_NAME
          EOF

      - name: Revoke GitHub Actions Runner IP from AWS Security Group
        if: always()
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SECURITY_GROUP_ID: ${{ secrets.SECURITY_GROUP_ID }}
        run: |
          echo "Removing GitHub Actions runner IP..."
          RUNNER_IP=$(curl -s https://checkip.amazonaws.com)
          aws ec2 revoke-security-group-ingress \
            --group-id $SECURITY_GROUP_ID \
            --protocol tcp \
            --port 22 \
            --cidr $RUNNER_IP/32 \
            --region $AWS_REGION
